import { relations } from "drizzle-orm/relations";
import { skillTrees, skills, xpTransactions, quests, questObjectives, basicNeeds, needCompletions, brainDumps, aiProcessingResults, autoGeneratedContent, inventoryItems, itemAssociations, questSkillTrees } from "./schema";

export const skillsRelations = relations(skills, ({one}) => ({
	skillTree: one(skillTrees, {
		fields: [skills.treeId],
		references: [skillTrees.id]
	}),
}));

export const skillTreesRelations = relations(skillTrees, ({many}) => ({
	skills: many(skills),
	xpTransactions: many(xpTransactions),
}));

export const xpTransactionsRelations = relations(xpTransactions, ({one}) => ({
	skillTree: one(skillTrees, {
		fields: [xpTransactions.skillTreeId],
		references: [skillTrees.id]
	}),
}));

export const questObjectivesRelations = relations(questObjectives, ({one}) => ({
	quest: one(quests, {
		fields: [questObjectives.questId],
		references: [quests.id]
	}),
}));

export const questsRelations = relations(quests, ({many}) => ({
	questObjectives: many(questObjectives),
	questSkillTrees: many(questSkillTrees),
}));

export const needCompletionsRelations = relations(needCompletions, ({one}) => ({
	basicNeed: one(basicNeeds, {
		fields: [needCompletions.needId],
		references: [basicNeeds.id]
	}),
}));

export const basicNeedsRelations = relations(basicNeeds, ({many}) => ({
	needCompletions: many(needCompletions),
}));

export const aiProcessingResultsRelations = relations(aiProcessingResults, ({one}) => ({
	brainDump: one(brainDumps, {
		fields: [aiProcessingResults.brainDumpId],
		references: [brainDumps.id]
	}),
}));

export const brainDumpsRelations = relations(brainDumps, ({many}) => ({
	aiProcessingResults: many(aiProcessingResults),
	autoGeneratedContents: many(autoGeneratedContent),
}));

export const autoGeneratedContentRelations = relations(autoGeneratedContent, ({one}) => ({
	brainDump: one(brainDumps, {
		fields: [autoGeneratedContent.sourceDumpId],
		references: [brainDumps.id]
	}),
}));

export const itemAssociationsRelations = relations(itemAssociations, ({one}) => ({
	inventoryItem: one(inventoryItems, {
		fields: [itemAssociations.itemId],
		references: [inventoryItems.id]
	}),
}));

export const inventoryItemsRelations = relations(inventoryItems, ({many}) => ({
	itemAssociations: many(itemAssociations),
}));

export const questSkillTreesRelations = relations(questSkillTrees, ({one}) => ({
	quest: one(quests, {
		fields: [questSkillTrees.questId],
		references: [quests.id]
	}),
}));